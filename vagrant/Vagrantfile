# -*- mode: ruby -*-
# vi: set ft=ruby :

# USAGE:
#

require 'fileutils'
require 'getoptlong'


# Config all in:
kibana_ip="10.0.0.11"
manager_ip="10.0.0.1"
memory="2048"
cpu="1"

# Ubuntu
#sobox="ubuntu/xenial64"
#shellprovision="ubuntu.sh"

# CentOS
# vagrant --boxname=worker --version=3.8 --type=manager --installation=packages --node_ip=10.0.0.15 up node-worker
# vagrant --boxname=agent1 --version=3.8 --type=agent --installation=packages --node_ip=10.0.0.20 up node-agent1
sobox="centos/7"
shellprovision="centos.sh"

# Options
boxname="defaultname"
version="3.8"
type="manager"
installation="packages"
node_ip="10.0.0.20"

opts = GetoptLong.new(
    # Native Vagrant options
    [ '--force', '-f', GetoptLong::NO_ARGUMENT ],
    [ '--provision', '-p', GetoptLong::NO_ARGUMENT ],
    [ '--provision-with', GetoptLong::NO_ARGUMENT ],
    [ '--provider', GetoptLong::OPTIONAL_ARGUMENT ],
    [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
    [ '--check', GetoptLong::NO_ARGUMENT ],
    [ '--logout', GetoptLong::NO_ARGUMENT ],
    [ '--token', GetoptLong::NO_ARGUMENT ],
    [ '--disable-http', GetoptLong::NO_ARGUMENT ],
    [ '--http', GetoptLong::NO_ARGUMENT ],
    [ '--https', GetoptLong::NO_ARGUMENT ],
    [ '--ssh-no-password', GetoptLong::NO_ARGUMENT ],
    [ '--ssh', GetoptLong::NO_ARGUMENT ],
    [ '--ssh-port', GetoptLong::NO_ARGUMENT ],
    [ '--ssh-once', GetoptLong::NO_ARGUMENT ],
    [ '--host', GetoptLong::NO_ARGUMENT ],
    [ '--entry-point', GetoptLong::NO_ARGUMENT ],
    [ '--plugin-source', GetoptLong::NO_ARGUMENT ],
    [ '--plugin-version', GetoptLong::NO_ARGUMENT ],
    [ '--debug', GetoptLong::NO_ARGUMENT ],
    [ '--prune', GetoptLong::NO_ARGUMENT ],

    ## custom options
    [ '--boxname', GetoptLong::OPTIONAL_ARGUMENT ],
    [ '--version', GetoptLong::OPTIONAL_ARGUMENT ],
    [ '--type', GetoptLong::OPTIONAL_ARGUMENT ],
    [ '--installation', GetoptLong::OPTIONAL_ARGUMENT ],
    [ '--node_ip', GetoptLong::OPTIONAL_ARGUMENT ],
)

opts.each do |opt, arg|
    case opt
    when '--boxname'
        boxname=arg
    when '--version'
        version=arg
    when '--type'
        type=arg
    when '--installation'
        installation=arg
    when '--node_ip'
        node_ip=arg
    end
end

hostname="#{boxname}"+"#{version}"


Vagrant.configure(2) do |config|

    ####################################################################################
    ## All in
    ####################################################################################
    config.vm.define "node-#{boxname}" do |box|
        box.vm.post_up_message = "Box #{sobox} wazuh #{type} #{version} ip:#{node_ip}"
        box.vm.box = "#{sobox}"
        FileUtils.cp("./provisioning/wazuh_shell", "./box")
        box.vm.hostname = "#{hostname}"
        box.vm.network :private_network, ip: "#{node_ip}"
		box.vm.provider "box" do |pmv|
            pmv.memory = "#{memory}"
            pmv.cpus   = "#{cpu}"
	    end
        config.vm.synced_folder "./box",
                "/home/vagrant/shared",
                type: "nfs",
                nfs_version: 4,
                nfs_udp: false
        box.vm.provision :shell,
                path: "./provisioning/#{shellprovision}",
                args: "#{type} #{version} #{manager_ip} #{installation}"
    end

    ####################################################################################
    ## Kibana
    ####################################################################################

	config.vm.define "kibana" do |kibana|
        kibana.vm.post_up_message = "Box centos/7 kibana dev ip:#{kibana_ip}"
        kibana.vm.box = "centos/7"
        kibana.vm.provision :shell, path: "./provisioning/kibana.sh"
        kibana.vm.network :private_network, ip: "#{kibana_ip}"
        kibana.vm.provider "virtualbox" do |pmv|
            pmv.memory = 3400
            pmv.cpus   = 1
        end
        kibana.vm.hostname = "wkibana"
	end

    ####################################################################################################################
    ## Managers
    ####################################################################################################################

#    config.vm.define :man_ubuntu16 do |man_ubuntu16|
#        man_ubuntu16.vm.post_up_message = "This is the #{osubuntu} wazuh manager #{version} ip:#{manager_ip}"
#        man_ubuntu16.vm.box = "ubuntu/xenial64"
#        FileUtils.cp("./provisioning/wazuh_shell", "./man_ubuntu16")
#        man_ubuntu16.vm.hostname = "manubuntu16"
#        man_ubuntu16.vm.network :private_network, ip: "#{manager_ip}"
#		man_ubuntu16.vm.provider "man_ubuntu16" do |pmv|
#            pmv.memory = 2048
#            pmv.cpus   = 1
#	    end
#        config.vm.synced_folder "./man_ubuntu16", "/vagrant", type: "nfs", nfs_version: 4, nfs_udp: false
#        man_ubuntu16.vm.provision :shell, path: "./provisioning/manager.sh", args: "#{osubuntu} #{version}"
#    end
#
#    config.vm.define :man_ubuntu18 do |man_ubuntu18|
#        man_ubuntu18.vm.post_up_message = "This is the #{osubuntu} wazuh manager #{version} ip:#{manager_ip}"
#        man_ubuntu18.vm.box = "ubuntu/bionic64"
#        FileUtils.cp("./provisioning/wazuh_shell", "./man_ubuntu18")
#        man_ubuntu18.vm.hostname = "manubuntu18"
#        man_ubuntu18.vm.network :private_network, ip: "#{manager_ip}"
#		man_ubuntu18.vm.provider "man_ubuntu18" do |pmv|
#            pmv.memory = 2048
#            pmv.cpus   = 1
#	    end
#        config.vm.synced_folder "./man_ubuntu18", "/vagrant", type: "nfs", nfs_version: 4, nfs_udp: false
#        man_ubuntu18.vm.provision :shell, path: "./provisioning/manager.sh", args: "#{osubuntu} #{version}"
#    end
#
#    config.vm.define :man_centos7 do |man_centos7|
#        man_centos7.vm.post_up_message = "This is the #{osubuntu} wazuh manager #{version} ip:#{manager_ip}"
#        man_centos7.vm.box = "centos/7"
#        FileUtils.cp("./provisioning/wazuh_shell", "./man_centos7")
#        man_centos7.vm.hostname = "mancentos7"
#        man_centos7.vm.network :private_network, ip: "#{manager_ip}"
#		man_centos7.vm.provider "man_centos7" do |pmv|
#            pmv.memory = 2048
#            pmv.cpus   = 1
#	    end
#        config.vm.synced_folder "./man_centos7", "/vagrant", type: "nfs", nfs_version: 4, nfs_udp: false
#        man_centos7.vm.provision :shell, path: "./provisioning/manager.sh", args: "#{oscentos} #{version}"
#    end

    ####################################################################################################################
    ## Agents
    ####################################################################################################################

#    config.vm.define :ag_ubuntu16 do |ag_ubuntu16|
#        ag_ubuntu16.vm.post_up_message = "This is the #{osubuntu} wazuh agent #{version} ip:#{manager_ip}"
#        ag_ubuntu16.vm.box = "ubuntu/xenial64"
#        FileUtils.cp("./provisioning/wazuh_shell", "./ag_ubuntu16")
#        ag_ubuntu16.vm.hostname = "agubuntu16"
#        ag_ubuntu16.vm.network :private_network, ip: "10.0.0.21"
#		ag_ubuntu16.vm.provider "ag_ubuntu16" do |pmv|
#            pmv.memory = 512
#            pmv.cpus   = 1
#	    end
#        config.vm.synced_folder "./ag_ubuntu16", "/vagrant", type: "nfs", nfs_version: 4, nfs_udp: false
#        ag_ubuntu16.vm.provision :shell, path: "./provisioning/agent.sh", args: "#{osubuntu} #{version} #{manager_ip}"
#    end
#
#    config.vm.define :ag_ubuntu18 do |ag_ubuntu18|
#        ag_ubuntu18.vm.post_up_message = "This is the #{osubuntu} wazuh agent #{version} ip:#{manager_ip}"
#        ag_ubuntu18.vm.box = "ubuntu/bionic64"
#        FileUtils.cp("./provisioning/wazuh_shell", "./ag_ubuntu18")
#        ag_ubuntu18.vm.hostname = "agubuntu18"
#        ag_ubuntu18.vm.network :private_network, ip: "10.0.0.31"
#		ag_ubuntu18.vm.provider "ag_ubuntu18" do |pmv|
#            pmv.memory = 512
#            pmv.cpus   = 1
#	    end
#        config.vm.synced_folder "./ag_ubuntu18", "/vagrant", type: "nfs", nfs_version: 4, nfs_udp: false
#        ag_ubuntu18.vm.provision :shell, path: "./provisioning/agent.sh", args: "#{osubuntu} #{version} #{manager_ip}"
#    end
#
#    config.vm.define :ag_centos7 do |ag_centos7|
#        ag_centos7.vm.post_up_message = "This is the #{osubuntu} wazuh agent #{version} ip:#{manager_ip}"
#        ag_centos7.vm.box = "centos/7"
#        FileUtils.cp("./provisioning/wazuh_shell", "./ag_centos7")
#        ag_centos7.vm.hostname = "agcentos7"
#        ag_centos7.vm.network :private_network, ip: "10.0.0.41"
#		ag_centos7.vm.provider "ag_centos7" do |pmv|
#            pmv.memory = 512
#            pmv.cpus   = 1
#	    end
#        config.vm.synced_folder "./ag_centos7", "/vagrant", type: "nfs", nfs_version: 4, nfs_udp: false
#        ag_centos7.vm.provision :shell, path: "./provisioning/agent.sh", args: "#{oscentos} #{version} #{manager_ip}"
#    end
end
