# Set of aliases and functions
# Wazuh Inc.
# May 22, 2016
#
# Rev 1
#
# Install:
# Go to the directory that contains this file and run:
# cp wazuh_shell ~/.wazuh_shell && echo -e '\n. $HOME/.wazuh_shell' >> ~/.bashrc && . ~/.bashrc

# Overwrite this value at your preference
THREADS=

if [ -z "$THREADS" ]
then
    case $(uname) in
    Linux)
        THREADS=$(grep processor /proc/cpuinfo | wc -l)
        ;;
    Darwin)
        THREADS=$(sysctl -n hw.ncpu)
        ;;
    *)
        THREADS=1
    esac
fi

export PATH=$PATH:/var/ossec/bin

alias make-agent="make -j$THREADS TARGET=agent DEBUG=yes"
alias make-server="make -j$THREADS TARGET=server DEBUG=yes"
alias make-local="make -j$THREADS TARGET=local DEBUG=yes"
alias make-server-root="make-server OSSEC_USER=root OSSEC_GROUP=root OSSEC_USER_MAIL=root OSSEC_USER_REM=root"
alias make-winagent="make -j$THREADS TARGET=winagent DEBUG=yes"
alias make-test="make clean && make-server && make clean-internals && make-agent && make clean-internals && make-local && make clean && make-winagent && make clean"
alias make-docker="make SOURCE=$HOME/ossec-wazuh JOBS=$THREADS"

alias tail-ossec="tail -Fn1000 /var/ossec/logs/ossec.log"
alias tail-alerts="tail -Fn1000 /var/ossec/logs/alerts/alerts.log"
alias tail-alerts-json="tail -Fn1000 /var/ossec/logs/alerts/alerts.json"
alias tail-archives="tail -Fn1000 /var/ossec/logs/archives/archives.log"
alias tail-archives-json="tail -Fn1000 /var/ossec/logs/archives/archives.json"
alias tail-cluster="tail -Fn1000 /var/ossec/logs/cluster.log"
alias tail-api='tail -Fn1000 /var/ossec/logs/api.log'

alias nano-ossec='nano -Yxml /var/ossec/etc/ossec.conf'
alias nano-agent='nano /var/ossec/etc/shared/default/agent.conf'
alias nano-sh='nano -Ysh'
alias nano-internal='nano -Yxml /var/ossec/etc/internal_options.conf'
alias nano-localio='nano -Yxml /var/ossec/etc/local_internal_options.conf'

alias ossec-ssl="openssl req -x509 -batch -nodes -days 365 -newkey rsa:2048 -keyout /var/ossec/etc/sslmanager.key -out /var/ossec/etc/sslmanager.cert -subj \"/C=US/ST=CA/O=Wazuh\""

alias valgrind="valgrind --track-fds=yes --leak-check=full --num-callers=20 --track-origins=yes"
alias docker-rm="docker rm -f \$(docker ps -aq) 2> /dev/null"
alias docker-rmi="docker rmi -f \$(docker images | awk '/^<none>/ {print \$3}') 2> /dev/null"
alias docker-run="docker run -it --rm"
alias watch-doc="make clean && make -j$THREADS html && while true; do inotifywait -re CLOSE_WRITE source; make -j$THREADS html; done"

function sgrep() {
    if [ "$2" = "" ]; then
        egrep -IRn "$1" .
    else
        egrep -IRn "$1" `find . -name "$2"`
    fi
}

function compile() {
    gcc -pipe -O2 -Wall -Wextra -o $1 $1.c ${@:2}
}

function debug() {
    gcc -pipe -g -Wall -Wextra -o $1 $1.c ${@:2}
}

mkcd() {
    mkdir -p $1 && cd $1
}

ossec-uninstall() {
    OSSEC_INIT="/etc/ossec-init.conf"

    # Try to get the installation directory

    if ! . $OSSEC_INIT 2> /dev/null
    then
        echo "Wazuh seems not to be installed. Removing anyway..."
        DIRECTORY="/var/ossec"
    fi

    # Stop service
    if [ $(uname) = "Linux" ]
    then
        service wazuh-manager stop 2> /dev/null
        service wazuh-agent stop 2> /dev/null
        service wazuh-api stop 2> /dev/null
    fi

    # Stop daemons
    $DIRECTORY/bin/ossec-control stop 2> /dev/null

    # Remove files and service artifacts
    rm -rf $DIRECTORY $OSSEC_INIT

    # Delete service

    case $(uname) in
    Linux)
        [ -f /etc/rc.local ] && sed -i'' '/ossec-control start/d' /etc/rc.local
        find /etc/{init.d,rc*.d} -name "*wazuh" | xargs rm -f

        if pidof systemd > /dev/null
        then
            find /etc/systemd/system -name "wazuh*" | xargs rm -f
            systemctl daemon-reload
        fi
        ;;
    Darwin)
        rm -rf /Library/StartupItems/OSSEC
        ;;
    SunOS)
        find /etc/{init.d,rc*.d} -name "*wazuh" | xargs rm -f
        ;;
    HP-UX)
        find /sbin/{init.d,rc*.d} -name "*wazuh" | xargs rm -f
        ;;
    AIX)
        find /etc/rc.d -name "*wazuh" | xargs rm -f
        ;;
    OpenBSD|NetBSD|FreeBSD|DragonFly)
        sed -i'' '/ossec-control start/d' /etc/rc.local
        ;;
    *)
        echo "ERROR: uname '$(uname)' not recognized. Could not remove service."
    esac

    # Delete users

    case $(uname) in
    Darwin)
        dscl . -delete "/Users/ossec" > /dev/null 2>&1
        dscl . -delete "/Users/ossecm" > /dev/null 2>&1
        dscl . -delete "/Users/ossecr" > /dev/null 2>&1
        dscl . -delete "/Groups/ossec" > /dev/null 2>&1
        ;;
    AIX)
        userdel ossec 2> /dev/null
        userdel ossecm 2> /dev/null
        userdel ossecr 2> /dev/null
        rmgroup ossec 2> /dev/null
        ;;
    *)
        userdel ossec 2> /dev/null
        userdel ossecm 2> /dev/null
        userdel ossecr 2> /dev/null
        groupdel ossec 2> /dev/null
    esac
}
